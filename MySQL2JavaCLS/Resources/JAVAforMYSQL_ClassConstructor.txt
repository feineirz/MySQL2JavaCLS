@SECTIONSTART@

	
	//////////////////////////////[ CONSTRUCTOR ]//////////////////////////////
	// Create a @CLASSNAME@ object from the given @PRIMARYKEY@. //
	///////////////////////////////////////////////////////////////////////////

	/// DEFAULT CONSTRUCTOR ///
	public @CLASSNAME@() {}

	/// OVERLOAD CONSTRUCTOR ///
	public RawMaterials(@PRIMARYKEY_DATATYPE@ @CLASSNAME@_@PRIMARYKEY@) {		
		this(@CLASSNAME@_@PRIMARYKEY@, new MySQLDBConnector().getDBConnection(), true);		
	}
	
	public RawMaterials(@PRIMARYKEY_DATATYPE@ @CLASSNAME@_@PRIMARYKEY@, Connection conn) {
		this(@CLASSNAME@_@PRIMARYKEY@, conn, false);
	} /////////////////////////////////////////////////////////////////////////
	
	/// MAIN CONSTRUCTOR ///
	public RawMaterials(@PRIMARYKEY_DATATYPE@ @CLASSNAME@_@PRIMARYKEY@, Connection conn, boolean autoCloseConnection) {
		
		try {
			String qry = "SELECT *"
					+ " FROM " + relName
					+ " WHERE @PRIMARYKEY@=?";
			PreparedStatement stmt = conn.prepareStatement(qry);
			stmt.set@PRIMARYKEY_GETSETDATATYPE@(1, @CLASSNAME@_@PRIMARYKEY@);
			
			ResultSet rs = stmt.executeQuery();
			while(rs.next()) {
@CLASSCONSTRUCTOR_PROPERTYLIST@
			}
			
		} catch (SQLException e) {
			e.printStackTrace();
		}

		if(autoCloseConnection) {
			try {
				conn.close();
			} catch (SQLException ex) {
				ex.printStackTrace();
			}
		}
		
	} /////////////////////////////////////////////////////////////////////////

@SECTIONEND@

